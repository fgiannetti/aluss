#!/bin/bash

####
#
#	Update all packages and do a system refresh
#	Tasks taken from https://wiki.archlinux.org/index.php/System_maintenance#Regularly_upgrade_the_system
#	The script needs reflector installed [https://wiki.archlinux.org/index.php/Reflector]
#
###

HELP_MSG="usage: aluss-update [options]
Options:
	-nc|--noconfirm       No confirm. Bypass the prompt in Y/n confirmations
	-um|--updatemirrors   Update the pacman mirrors (require 'reflector' installed)"

# Make sure only root can run our script
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2 && exit 1
fi

MIRROR_FILE=/etc/pacman.d/mirrorlist
noconfirm=""
update_mirrors=0

while [[ $# > 0 ]]
do
	if [ -n "$1" ]; then
		case $1 in
			-nc|--noconfirm)
			noconfirm="--noconfirm"
			shift
			;;
			-um|--updatemirrors)
			update_mirrors=1
			shift
			;;
			-h|--help)
			echo "$HELP_MSG" && exit 0
			;;
			*)
			echo "Unknown parameter. Use [-nc|--noconfirm] [-um|--updatemirrors]" && exit 1
		esac
	fi
done

### Functions###
function finish_if_error {
	[ "$1" -ne "0" ] && echo ${2:-'Unexpected error'} && exit 1
}
### Functions end ###

if [ $update_mirrors -eq 1 ]; then
	hash reflector > /dev/null 2>&1
	finish_if_error $? "Reflector required for update mirror list"

	echo "Saving last mirror list to '$MIRROR_FILE.old'"
	[ -f $MIRROR_FILE ] && mv $MIRROR_FILE $MIRROR_FILE.old
	
	echo "Importing updated mirror list with reflector..."
	reflector --verbose --sort rate --save $MIRROR_FILE > /dev/null 2>&1
	finish_if_error $? "Error while updating mirror list"
fi

echo "Removing orphan packages"
if [[ ! -n $(pacman -Qdt) ]]; then
    echo "No orphans to remove."
else
    sudo pacman -Rns $noconfirm $(pacman -Qdtq $noconfirm)
fi

finish_if_error $? "Error while deleting orphan packages"

echo "Removing the package cache..."
paccache -r
finish_if_error $? "Error while deleting package cache"
paccache -ruk0
finish_if_error $? "Error while deleting package cache"

echo "Optimizing pacman"
pacman -Sc $noconfirm && pacman-optimize
finish_if_error $? "Error while optimizing pacman"

echo "Updating system (finally...)"
pacman -Syu $noconfirm
finish_if_error $? "Error while updating system"

echo "All tasks finished successfull!!!"